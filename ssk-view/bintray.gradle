apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

// load properties
Properties properties = new Properties()
File localPropertiesFile = project.rootProject.file("local.properties");
if (localPropertiesFile.exists()) {
    properties.load(localPropertiesFile.newDataInputStream())
}
File projectPropertiesFile = project.file("project.properties");
if (projectPropertiesFile.exists()) {
    properties.load(projectPropertiesFile.newDataInputStream())
}

// read properties
String projectName = properties.getProperty("project.name")
String projectGroupId = properties.getProperty("project.groupId")
String projectArtifactId = properties.getProperty("project.artifactId")
String projectVersion = properties.getProperty("project.version")
String projectSiteUrl = properties.getProperty("project.url.site")
String projectGitUrl = properties.getProperty("project.url.git")
String projectScmConnectionUrl = properties.getProperty("project.scm.connection")
String projectScmDeveloperUrl = properties.getProperty("project.scm.developer")
String projectDescription = properties.getProperty("project.description")

String developerName = properties.getProperty("developer.name")
String developerEmail = properties.getProperty("developer.email")

String bintrayUser = properties.getProperty("bintray.user")
String bintrayApikey = properties.getProperty("bintray.apikey")
String gpgPass = properties.getProperty("bintray.gpg.password")

group = projectGroupId

// This generates POM.xml with proper parameters
install {
    repositories.mavenInstaller {
        pom {
            project {
                dependencies {
                    dependency{
                        groupId 'androidx.fragment'
                        artifactId 'fragment'
                    }
                }
                packaging 'aar'
                groupId projectGroupId
                artifactId projectArtifactId
                version projectVersion
                name projectName
                description projectDescription
                url projectSiteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection projectScmConnectionUrl
                    developerConnection projectScmDeveloperUrl
                    url projectSiteUrl
                }
            }
        }
    }
}

// This generates sources.jar
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// javadoc configuration
javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version projectVersion
        links "http://docs.oracle.com/javase/7/docs/api"
        title projectName
    }
}

bintray {
    user = bintrayUser
    key = bintrayApikey
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = projectName
        websiteUrl = projectSiteUrl
        vcsUrl = projectGitUrl
        licenses = ["Apache-2.0"]
        publish = true
        publicDownloadNumbers = true
        version {
            name = projectVersion
            desc = projectDescription
            vcsTag = 'master'
            gpg {
                sign = true
                //Determines whether to GPG sign the files. The default is false
                passphrase = gpgPass    //Optional. The passphrase for GPG signing'
            }
        }
    }
}
